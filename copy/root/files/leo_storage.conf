#======================================================================
# LeoFS - Storage Configuration
#
# See: http://www.leofs.org/docs/configuration.html#leofs-storage
#======================================================================
## --------------------------------------------------------------------
## SASL
## --------------------------------------------------------------------
## See: http://www.erlang.org/doc/man/sasl_app.html
##
## The following configuration parameters are defined for
## the SASL application. See app(4) for more information
## about configuration parameters

## SASL error log path
sasl.sasl_error_log = /var/log/leo_storage/sasl/sasl-error.log

## Restricts the error logging performed by the specified sasl_error_logger
## to error reports, progress reports, or both.
## errlog_type = [error | progress | all]
## sasl.errlog_type = error

## Specifies in which directory the files are stored.
## If this parameter is undefined or false, the error_logger_mf_h is not installed.
sasl.error_logger_mf_dir = /var/log/leo_storage/sasl

## Specifies how large each individual file can be.
## If this parameter is undefined, the error_logger_mf_h is not installed.
## sasl.error_logger_mf_maxbytes = 10485760

## Specifies how many files are used.
## If this parameter is undefined, the error_logger_mf_h is not installed.
## sasl.error_logger_mf_maxfiles = 5

## --------------------------------------------------------------------
## Manager's Node(s)
## --------------------------------------------------------------------
## Name of Manager node(s)
managers = [manager_0@127.0.0.1, manager_1@127.0.0.1]

## --------------------------------------------------------------------
## STORAGE
## --------------------------------------------------------------------
## Object container
obj_containers.path = [/var/db/leo_storage/avs]
obj_containers.num_of_containers = [8]

## e.g. Case of plural pathes
## obj_containers.path = [/var/leofs/avs/1, /var/leofs/avs/2]
## obj_containers.num_of_containers = [32, 64]


## A number of virtual-nodes for the redundant-manager
## num_of_vnodes = 168


## --------------------------------------------------------------------
## STORAGE - MQ
## --------------------------------------------------------------------
## A number of mq-server's processes
mq.num_of_mq_procs = 8

## MQ recover per_object
mq.recover_per_object.num_of_batch_process = 1
mq.recover_per_object.interval_min = 1
mq.recover_per_object.interval_max = 1

## MQ synchronize objects by vnode-id
mq.sync_by_vnode_id.num_of_batch_process = 1
mq.sync_by_vnode_id.interval_min = 8
mq.sync_by_vnode_id.interval_max = 32

## MQ rebalance objects
mq.rebalance.num_of_batch_process = 1
mq.rebalance.interval_min = 1
mq.rebalance.interval_max = 1

## MQ delete objects
mq.delete_object.num_of_batch_process = 1
mq.delete_object.interval_min = 1
mq.delete_object.interval_max = 1

## MQ recover a node's object
mq.recovery_node.num_of_batch_process = 1
mq.recovery_node.interval_min = 8
mq.recovery_node.interval_max = 32


## --------------------------------------------------------------------
## STORAGE - Replication/Recovery object(s)
## --------------------------------------------------------------------
## Rack-id for the rack-awareness replica placement
## replication.rack_awareness.rack_id =

## Size of stacked objects (bytes)
## replication.recovery.size_of_stacked_objs = 33554432

## Stacking timeout (sec)
## replication.recovery.stacking_timeout = 5


## --------------------------------------------------------------------
## STORAGE - Replication/Recovery object(s)
## --------------------------------------------------------------------
## Size of stacked objects (bytes) - default:32MB
mdc_replication.size_of_stacked_objs = 33554432

## Stacking timeout (sec)
mdc_replication.stacking_timeout = 30

## Request timeout (msec)
mdc_replication.req_timeout = 30000

## Number of stacking procs
mdc_replication.stacking_procs = 1


## --------------------------------------------------------------------
## STORAGE - Log
## --------------------------------------------------------------------
## Log level: [0:debug, 1:info, 2:warn, 3:error]
## log.log_level = 1

## Output log file(s) - Erlang's log
log.erlang = /var/log/leo_storage/erlang

## Output log file(s) - app
log.app = /var/log/leo_storage/app

## Output log file(s) - members of storage-cluster
log.member_dir = /var/log/leo_storage/ring

## Output log file(s) - ring
log.ring_dir = /var/log/leo_storage/ring


## --------------------------------------------------------------------
## STORAGE - Other Directories
## --------------------------------------------------------------------
## Directory of queue for monitoring "RING"
queue_dir  = /var/db/leo_storage/queue

## Directory of SNMP agent configuration
## snmp_agent = ./snmp/snmpa_storage_0/LEO-STORAGE


## --------------------------------------------------------------------
## Other Libs
## --------------------------------------------------------------------
## MQ backend storage: [bitcask, leveldb]
## leo_mq.backend_db = bitcask

## Enable strict check between checksum of a metadata and checksum of an object
## leo_object_storage.is_strict_check = false

## Metadata Storage: [bitcask, leveldb]
leo_object_storage.metadata_storage = leveldb

## Send after interval
## leo_ordning_reda.send_after_interval = 100

## Temporary directory of stacked objects
## leo_ordning_reda.temp_stacked_dir = "work/ord_reda/"


## --------------------------------------------------------------------
## RPC
## --------------------------------------------------------------------
## RPC-Server's acceptors
## this value must be determinted by following logic
## rpc.server.acceptor need to be larger than 
## rpc.client.connection_pool(buffer)_size * "# of storage nodes + # of manager nodes in your cluster"
## The default value is suitable for less than 16 nodes in a cluster
## rpc.server.acceptors = 128

## RPC-Server's listening port number
## rpc.server.listen_port = 13077

## RPC-Server's listening timeout
## rpc.server.listen_timeout = 30000

## RPC-Client's size of connection pool
## rpc.client.connection_pool_size = 8

## RPC-Client's size of connection buffer
## rpc.client.connection_buffer_size = 8


## --------------------------------------------------------------------
## Profiling
## --------------------------------------------------------------------
## Enable profiler - leo_backend_db
## leo_backend_db.profile = false

## Enable profiler - leo_logger
## leo_logger.profile = false

## Enable profiler - leo_mq
## leo_mq.profile = false

## Enable profiler - leo_object_storage
## leo_object_storage.profile = false

## Enable profiler - leo_ordning_reda
## leo_ordning_reda.profile = false

## Enable profiler - leo_redundant_manager
## leo_redundant_manager.profile = false

## Enable profiler - leo_rpc
## leo_rpc.profile = false

## Enable profiler - leo_statistics
## leo_statistics.profile = false


#======================================================================
# For vm.args
#======================================================================
## Name of the leofs-storage node
nodename = storage_0@127.0.0.1

## Cookie for distributed node communication.  All nodes in the same cluster
## should use the same cookie or they will not be able to communicate.
distributed_cookie = 401321b4

## Enable kernel poll
erlang.kernel_poll = true

## Number of async threads
erlang.asyc_threads = 32

## Increase number of concurrent ports/sockets
erlang.max_ports = 64000

## Set the location of crash dumps
erlang.crash_dump = /var/log/leo_storage/erl_crash.dump

## Raise the ETS table limit
erlang.max_ets_tables = 256000

## Raise the default erlang process limit
process_limit = 1048576

## Path of SNMP-agent configuration
##snmp_conf = ./snmp/snmpa_storage_0/leo_storage_snmp
